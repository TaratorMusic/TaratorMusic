name: Build App
on:
    push:
        branches:
            - main
    workflow_dispatch:

permissions:
    contents: write
    pull-requests: write

jobs:
    version-check:
        runs-on: ubuntu-latest
        outputs:
            should_run: ${{ steps.compare.outputs.should_run }}
            version: ${{ steps.pkg.outputs.version }}
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Read package.json version
              id: pkg
              run: echo version=$(node -p 'require("./package.json").version') >> $GITHUB_OUTPUT
            - name: Get latest git tag
              id: tag
              run: |
                  latest=$(git tag --sort=-v:refname | head -n1 || echo "")
                  echo "latest=$latest" >> $GITHUB_OUTPUT
            - name: Decide if build should run
              id: compare
              run: |
                  if [ "${{ steps.pkg.outputs.version }}" = "${{ steps.tag.outputs.latest }}" ]; then
                      echo "should_run=false" >> $GITHUB_OUTPUT
                  else
                      echo "should_run=true" >> $GITHUB_OUTPUT
                  fi

    build-windows:
        needs: version-check
        if: needs.version-check.outputs.should_run == 'true'
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 20.18.1
            - run: npm ci
            - run: npm run postinstall
            - name: Install Go
              uses: actions/setup-go@v4
              with:
                  go-version: 1.21
            - name: Build
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              shell: pwsh
              run: npm run dist
            - uses: actions/upload-artifact@v4
              with:
                  name: taratormusic-win
                  path: dist/

    build-mac:
        needs: version-check
        if: needs.version-check.outputs.should_run == 'true'
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.11"
            - uses: actions/setup-node@v3
              with:
                  node-version: 20.18.1
            - uses: actions/setup-go@v4
              with:
                  go-version: 1.21
            - run: npm ci
            - run: npm run postinstall
            - name: Build
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: npm run dist
            - uses: actions/upload-artifact@v4
              with:
                  name: taratormusic-mac
                  path: dist/

    build-linux:
        needs: version-check
        if: needs.version-check.outputs.should_run == 'true'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 20.18.1
            - uses: actions/setup-go@v4
              with:
                  go-version: 1.21
            - run: npm ci
            - run: npm run postinstall
            - name: Build
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: npm run dist
            - uses: actions/upload-artifact@v4
              with:
                  name: taratormusic-linux
                  path: dist/

    release:
        needs:
            - version-check
            - build-windows
            - build-mac
            - build-linux
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: artifacts
            - name: Display structure of downloaded files
              run: ls -la artifacts/
            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ needs.version-check.outputs.version }}
                  name: TaratorMusic ${{ needs.version-check.outputs.version }}
                  draft: true
                  files: |
                      artifacts/taratormusic-win/*.exe
                      artifacts/taratormusic-win/*.blockmap
                      artifacts/taratormusic-mac/*.dmg
                      artifacts/taratormusic-mac/*.blockmap
                      artifacts/taratormusic-linux/*.AppImage
                      artifacts/taratormusic-linux/*.blockmap
                      artifacts/*/latest*.yml
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
